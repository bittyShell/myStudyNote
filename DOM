DOM
概念：Document Object Model;文档对象模型
	document（文档）对象：得到的是浏览器运行页面的源代码；DOM将HTML页面解析为一个文档
	node(节点)对象
	element（元素）对象
元素与节点的区别：
	* 元素 - 本身就是指标签
       * 标签的属性
       * 标签的文本
     * 节点
       * 元素节点(标签)
       * 属性节点(属性)
       * 文本节点(文本）
节点间的三种关系：祖宗与后代；父与子；兄弟关系
判断节点类型：
	nodeName--节点名称：文档节点--#document;元素节点--标签名；属性节点--属性名；文本节点--#text
	nodeType--节点类型：文档节点--9；元素节点--1；属性节点--2；文本节点--3
	nodeValue--节点值:文档节点--null；元素节点--null；属性节点--属性值；文本节点--文本内容
 * 作用
     * 如果是HTML标签的话，可以根据nodeName判断当前是什么标签
     * 可以根据nodeType判断当前获取的是什么节点
     * 如果是属性节点或文本节点的话，可以根据nodeValue获取当前的属性值或文本内容
 * 事件
   * 定义 - 实现用户与页面之间的交互瞬间
   * 事件绑定
     1. 获取当前页面中指定的标签
        document.getElementById(id)
     2. 为指定标签绑定事件
        标签.onclick = function(){
            执行的逻辑
        }
   * 事件属性 - HTML标签提供了事件属性，与事件绑定的作用相同
     * 注意 - 不推荐(HTML结构与逻辑不分离)
 * document对象
   * 获取HTML页面中的标签
     * 传统获取页面标签
       * getElementById()方法 - 通过id属性值获取对应标签
         * 由于 id 属性值唯一，只能获取指定唯一标签
       * getElementsByName()方法 - 通过name属性值获取对应标签
         * 返回一个类数组对象 - NodeList 对象
           * 含义 - 存储结构上类似于数组的存储方式，最终是一个对象(当作数组使用)
         * 注意 - 即使获取到的只有一个标签，返回的依旧是类数组结构 
       * getElementsByTagName()方法 - 通过标签名获取对应标签
         * 类似于 getElementsByName() 方法
       * getElementsByClassName()方法 - 通过class属性值获取对应标签
         * 类似于 getElementsByName() 方法
         * 注意 - 是一个新增方法 -> 可能会出现浏览器不支持
     * 通过 CSS 的选择器获取页面标签
       * querySelector(选择器)方法 - 返回第一个匹配的标签
         * 返回值 - 就是指定的标签
       * querySelectorAll(选择器)方法 - 返回所有匹配的标签
         * 返回值 - 类数组对象 -> NodeList